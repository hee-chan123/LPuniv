<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.lpuniv.heechan.message.dao.MessageMapper">
<!--    한 명의 사용자가 받은 메시지-->
    <select id="selectUserRecMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        where receiver_id = #{user_no}
        order by msg_id desc limit #{startRow}, #{size}
    </select>

<!--    한 명의 사용자가 보낸 메시지-->
    <select id="selectUserSenMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        where sender_id = #{user_no}
        order by msg_id desc limit #{startRow}, #{size}
    </select>

<!--    휴지통-->
    <select id="recycleMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        where (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1)
        order by msg_id desc limit #{startRow}, #{size}
    </select>

<!--    해당하는 메시지 상세 내용-->
    <select id="selectMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        where msg_id = #{msg_id}
    </select>

<!--    발신자가 메시지 삭제(DB에서는 삭제 X)-->
    <update id="senDel" parameterType="Integer">
        update message set sen_del = sen_del + 1 where msg_id = #{msg_id}
    </update>

<!--    수신자가 메시지 삭제(DB에서는 삭제 X)-->
    <update id="recDel" parameterType="Integer">
        update message set rec_del = rec_del + 1 where msg_id = #{msg_id}
    </update>

<!--    발신자와 수신자 모두 메시지 삭제 했을 때 DB에서도 삭제-->
    <delete id="msgDel" parameterType="Integer">
        delete from message where msg_id = #{msg_id}
    </delete>

<!--    받은 메시지 복구-->
    <update id="recycleRecMsg" parameterType="Integer">
        update message set rec_del = rec_del - 1 where msg_id = #{msg_id}
    </update>

<!--    보낸 메시지 복구-->
    <update id="recycleSenMsg" parameterType="Integer">
        update message set sen_del = sen_del - 1 where msg_id = #{msg_id}
    </update>

<!--    사용자가 보낸 메시지 수-->
    <select id="msgSenCnt" resultType="Integer">
        select count(*) from message where sender_id = #{user_no} and sen_del = 0
    </select>

<!--    사용자가 받은 메시지 수-->
    <select id="msgRecCnt" resultType="Integer">
        select count(*) from message where receiver_id = #{user_no} and rec_del = 0
    </select>

<!--    휴지통 메시지 수-->
    <select id="recycleMsgCnt" resultType="Integer">
        select count(*)
        from message
        where (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1)
    </select>

<!--    읽음으로 변경-->
    <update id="readMsg" parameterType="Integer">
        update message set read_flag = 1 where msg_id = #{msg_id}
    </update>

<!--    RecMsg검색-->
    <select id="searchRecMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '발신자'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and sender_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '수신자'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and receiver_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '제목'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and title like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
            </choose>
        </where>
    </select>

<!--    SenMsg검색-->
    <select id="searchSenMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '발신자'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and sender_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '수신자'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and receiver_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '제목'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and title like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
            </choose>
        </where>
    </select>

<!--    RecycleMsg검색-->
    <select id="searchRecycleMsg" resultType="com.project.lpuniv.heechan.message.dto.Message">
        select m.msg_id as msgId, m.sender_id as senderId, m.receiver_id as receiverId, m.sender_nm as senderNm, m.receiver_nm as receiverNm, m.title as title, m.content as content, m.sent_at as sentAt, m.sen_del as senDel, m.rec_del as recDel, m.read_flag as readFlag
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '발신자'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and sender_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '수신자'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and receiver_nm like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
                <when test="searchOp == '제목'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and title like #{searchInput}
                    order by msg_id desc limit #{startRow}, #{size}
                </when>
            </choose>
        </where>
    </select>

<!--    검색 RecMsg 수-->
    <select id="searchRecMsgCnt" resultType="Integer">
        select count(*)
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                </when>
                <when test="searchOp == '발신자'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and sender_nm like #{searchInput}
                </when>
                <when test="searchOp == '수신자'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and receiver_nm like #{searchInput}
                </when>
                <when test="searchOp == '제목'">
                    receiver_id = #{user_no} and (sen_del = 0 or rec_del = 0) and title like #{searchInput}
                </when>
            </choose>
        </where>
    </select>

<!--    검색 SenMsg 수-->
    <select id="searchSenMsgCnt" resultType="Integer">
        select count(*)
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                </when>
                <when test="searchOp == '발신자'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and sender_nm like #{searchInput}
                </when>
                <when test="searchOp == '수신자'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and receiver_nm like #{searchInput}
                </when>
                <when test="searchOp == '제목'">
                    sender_id = #{user_no} and (sen_del = 0 or rec_del = 0) and title like #{searchInput}
                </when>
            </choose>
        </where>
    </select>

<!--    검색 RecycleMsg 수-->
    <select id="searchRecycleMsgCnt" resultType="Integer">
        select count(*)
        from message m
        <where>
            <choose>
                <when test="searchOp == '전체'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and (sender_nm like #{searchInput} or receiver_nm like #{searchInput} or title like #{searchInput})
                </when>
                <when test="searchOp == '발신자'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and sender_nm like #{searchInput}
                </when>
                <when test="searchOp == '수신자'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and receiver_nm like #{searchInput}
                </when>
                <when test="searchOp == '제목'">
                    (receiver_id = #{user_no} or sender_id = #{user_no}) and (sen_del = 1 or rec_del = 1) and title like #{searchInput}
                </when>
            </choose>
        </where>
    </select>
</mapper>
